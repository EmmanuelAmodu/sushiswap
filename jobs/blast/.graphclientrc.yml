sources:
  - name: SushiSwapV2
    handler:
      graphql:
        endpoint: https://{context.host:api.thegraph.com/subgraphs/name}/{context.name:sushi-v2/sushiswap-ethereum}
        retry: 2
    transforms:
      - autoPagination:
          validateSchema: true
      - filterSchema:
          mode: wrap
          filters:
            - Type.!{Factory}
  - name: SushiSwapV3
    handler:
      graphql:
        endpoint: https://{context.host:api.thegraph.com/subgraphs/name}/{context.name:olastenberg/v3-arbitrum}
    transforms:
      - autoPagination:
          validateSchema: true
      - prefix:
          value: V3_
          includeRootOperations: true
          includeTypes: true
          ignore:
            - _SubgraphErrorPolicy_
      # - filterSchema:
      #     mode: wrap
      #     filters:
      #       - Type.!{Factory}
  - name: Blocks
    handler:
      graphql:
        endpoint: https://{context.host:api.thegraph.com/subgraphs/name}/{context.name:blocklytics/ethereum-blocks}
        retry: 3
  - name: Steer
    handler:
      graphql:
        endpoint: https://{context.url:api.thegraph.com/subgraphs/name/steerprotocol/steer-protocol-polygon}
        retry: 3
    transforms:
      - prefix:
          value: Steer_
          includeRootOperations: true
          includeTypes: true

additionalTypeDefs: |
  extend type V3_Pool {
    positions: [V3_Position!]!
  }
  type SteerVaultsAtBlock {
    vaults: [Steer_Vault!]!
  }
  # Query Extensions
  extend type Query {
    pairAtBlocks(
      id: ID!
      blocks: [Block_height!]!
    ): [Pair!]!
    v3PoolAtBlocks(
      id: ID!
      blocks: [Block_height!]!
    ): [V3_Pool!]!
    steerVaultsAtBlocks(
      where: Steer_Vault_filter
      blocks: [Block_height!]!
    ): [SteerVaultsAtBlock!]!
  }

# Had to disable global transforms since we have a jsonSchema handler in here now...
transforms:
  - autoPagination:
      validateSchema: false
  - autoTypeMerging: true
  - addSourceName: true

additionalResolvers:
  - ./src/resolvers/index.ts

documents:
  - ./query.graphql

codegen:
  contextType: 'MeshContext & { chainId: string; subgraphName: string; subgraphHost: string }'
